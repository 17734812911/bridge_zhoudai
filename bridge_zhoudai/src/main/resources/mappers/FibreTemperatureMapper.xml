<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtw.bridge.mapper.FibreTemperatureDao">

    <!-- 插入光纤测温数据 -->
    <insert id="insertData" parameterType="FibreTemperature">
        insert into fibre_temperature(device_ip,channel,partition_id,create_time,step,datas,max_value,max_value_points,offset_value)
        values(#{deviceIp},#{channel},#{partitionId},#{createTime},#{step},#{datas},#{maxValue},#{maxValuePoints},#{offsetValue})
    </insert>
    <!--  向device表更新光纤测温最新数据时间  -->
    <update id="updateDataTime" parameterType="java.lang.String">
        update device set last_data_time = #{dateTime} where device_type_id = 3
    </update>

    <!--  查询光纤测温配置  -->
    <select id="queryFibreTemperatureConfig" resultType="FibreTemperatureConfig" >
        select id,channel,partition_id,start_position,end_position,device_ip,offset_value,alarm_value,warning_value,critical_alarm,read_order
        from fibre_temperature_config
        where device_ip=#{deviceIp} and channel=#{channel}
    </select>

    <!--  插入报警数据  -->
    <insert id="insertAlertData" parameterType="FibreTemperatureAlert">
        insert into alert(line_id,terminal_id,content,alert_data,alert_date,alert_type)
        values(#{channel},#{terminalId},#{content},#{alertData},#{alertDate},#{alertType})
    </insert>



    <!--  按分区查询光纤测温数据  -->
    <select id="queryDatasById" resultType="FibreTemperature">
        select ft.id,ft.device_ip,ft.channel,ft.partition_id,ft.create_time,ft.step,ft.datas,ft.max_value,ft.max_value_points
        from fibre_temperature ft, (select MAX(id) id from fibre_temperature group by channel,partition_id) a
        where ft.id = a.id and ft.partition_id = #{partitionId}
    </select>

    <!--  按分区查询光纤测温数据(分页)  -->
    <select id="queryDatasPage" resultType="FibreTemperature">
        select ft.id,ft.device_ip,ft.channel,ft.partition_id,ft.create_time,ft.step,ft.datas,ft.max_value,ft.max_value_points
        from fibre_temperature ft, (select id from fibre_temperature ft
                                    <where>
                                        <if test="1==1">
                                            AND ft.create_time &gt;= #{beginTime}
                                        </if>
                                        <if test="1==1">
                                            AND ft.create_time &lt;= #{endTime}
                                        </if>
                                    </where>
                                    ) a
        <where>
            <if test="1 == 1">
                AND ft.id = a.id and ft.partition_id = #{partitionId}
            </if>
        </where>
        group by create_time
    </select>

    <!--  按分区查询光纤测温数据(分页)  -->
    <select id="queryDatasPageDesc" resultType="FibreTemperature">
        select ft.id,ft.device_ip,ft.channel,ft.partition_id,ft.create_time,ft.step,ft.datas,ft.max_value,ft.max_value_points
        from fibre_temperature ft, (select id from fibre_temperature ft
        <where>
            <if test="1==1">
                AND ft.create_time &gt;= #{beginTime}
            </if>
            <if test="1==1">
                AND ft.create_time &lt;= #{endTime}
            </if>
        </where>
        group by channel,partition_id) a
        <where>
            <if test="1 == 1">
                AND ft.id = a.id and ft.partition_id = #{partitionId}
            </if>
        </where>
        group by create_time
        order by create_time desc
    </select>



    <!--  查询光纤测温所有数据(所有分区三相最大值)  -->
    <select id="queryAllPartitionMaxValue" resultType="FibreTemperature">
        select a.id,device_ip,ft.channel,ft.partition_id,create_time,max_value,max_value_points
        from fibre_temperature ft, (select id from fibre_temperature ft
                                    <where>
                                        <if test="1==1">
                                            AND ft.create_time &gt;= #{begintime}
                                        </if>
                                        <if test="1==1">
                                            AND ft.create_time &lt;= #{endtime}
                                        </if>
                                    </where> ) a
        <where>
            <if test="1 == 1">
                AND ft.id = a.id
            </if>
        </where>
        group by partition_id,channel
    </select>

    <!--  查询所有分区光纤测温三相中的最大值及所在点位  -->
    <select id="queryAllMaxAndPoint" resultType="FibreTemperature">
        select a.partition_id,a.max_value,a.max_value_points
        from(
            select partition_id,channel,max_value,max_value_points
            from fibre_temperature ft, (select MAX(id) id from fibre_temperature group by channel,partition_id) a
            where ft.id = a.id
            ) a,fibre_temperature ft
        where a.partition_id = ft.partition_id
        group by a.partition_id
    </select>

    <!--  查询光纤测温通道的读取顺序  -->
    <select id="queryReadOrder" resultType="boolean">
        select read_order from fibre_temperature_config where id = 1
    </select>

    <!--  根据分区id和数据点位查询该点历史数据  &lt;= 是小于等于  &gt;= 是大于等于-->
    <select id="queryHistoricalDatas" resultType="FibreTemperature">
        select ft.channel,ft.create_time,ft.datas
        from fibre_temperature ft
        <where>
            <if test="beginTime == null and endTime == null">
                AND date_sub(curdate(), interval 7 day) &lt;= date(create_time)
            </if>
            <if test="beginTime != null and beginTime !=''">
                AND ft.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND ft.create_time &lt;= #{endTime}
            </if>
            <if test="1==1">
                AND ft.partition_id = #{partitionId}
            </if>
        </where>
        order by ft.create_time asc
    </select>

    <select id="queryStartEndPoint" resultType="java.util.HashMap">
        select start_position,end_position from fibre_temperature_config where partition_id = #{partitionId} group by partition_id
    </select>
</mapper>